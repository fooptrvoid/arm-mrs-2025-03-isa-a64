<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="not_eor_p_p_pp" title="NOT (predicate) -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="NOT"/>
    <docvar key="cond-setting" value="no-s"/>
    <docvar key="instr-class" value="sve"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="EOR"/>
  </docvars>
  <heading>NOT (predicate)</heading>
  <desc>
    <brief>
      <para>Bitwise invert predicate</para>
    </brief>
    <authored>
      <para>Bitwise invert each active element of the source predicate,
and place the results in the corresponding elements of the destination predicate. Inactive elements in the destination predicate register are set to zero. Does not set the condition flags.</para>
    </authored>
    <predicated>True</predicated>
    <uses_dit condition="FEAT_SVE2 is implemented or FEAT_SME is implemented">True</uses_dit>
  </desc>
  <operationalnotes>
    <operationalnote>
      <operationalnote_content>
        <para>If PSTATE.DIT is 1:</para>
        <list type="unordered">
          <listitem>
            <content>The execution time of this instruction is independent of:<list type="unordered">
                <listitem>
                  <content>The values of the data supplied in any of its operand registers when its governing predicate register contains the same value for each execution.</content>
                </listitem>
                <listitem>
                  <content>The values of the NZCV flags.</content>
                </listitem>
              </list>
            </content>
          </listitem>
          <listitem>
            <content>The response of this instruction to asynchronous exceptions does not vary based on:<list type="unordered">
                <listitem>
                  <content>The values of the data supplied in any of its operand registers when its governing predicate register contains the same value for each execution.</content>
                </listitem>
                <listitem>
                  <content>The values of the NZCV flags.</content>
                </listitem>
              </list>
            </content>
          </listitem>
        </list>
      </operationalnote_content>
    </operationalnote>
  </operationalnotes>
  <aliasto refiform="eor_p_p_pp.xml" iformid="eor_p_p_pp">EOR (predicates)</aliasto>
  <classes>
    <iclass name="Not setting the condition flags" oneof="1" id="iclass_not_setting_the_condition_flags" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="cond-setting" value="no-s"/>
        <docvar key="instr-class" value="sve"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="EOR"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SVE || FEAT_SME" name="FEAT_SVE || FEAT_SME"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sve.sve_pred_gen_a.sve_int_pred_log.eor_p_p_pp_z.not_p_p_p_z" tworows="1">
        <box hibit="31" width="3" settings="3">
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" name="op" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="22" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="21" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="19" width="4" name="Pm" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="15" width="2" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="13" width="4" name="Pg" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="9" name="o2" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="4" name="Pn" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="4" name="o3" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="4" name="Pd" usename="1">
          <c colspan="4"/>
        </box>
      </regdiagram>
      <encoding name="not_p_p_p_z_eor_p_p_pp_z" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="EOR"/>
          <docvar key="alias_mnemonic" value="NOT"/>
          <docvar key="instr-class" value="sve"/>
          <docvar key="cond-setting" value="no-s"/>
        </docvars>
        <asmtemplate><text>NOT  </text><a hover="Is the name of the destination scalable predicate register, encoded in the &quot;Pd&quot; field." link="Pd">&lt;Pd&gt;</a><text>.B, </text><a hover="Is the name of the governing scalable predicate register, encoded in the &quot;Pg&quot; field." link="Pg__2">&lt;Pg&gt;</a><text>/Z, </text><a hover="Is the name of the source scalable predicate register, encoded in the &quot;Pn&quot; field." link="Pn__3">&lt;Pn&gt;</a><text>.B</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="eor_p_p_pp.xml#eor_p_p_pp_z">EOR</a><text>  </text><a hover="Is the name of the destination scalable predicate register, encoded in the &quot;Pd&quot; field." href="eor_p_p_pp.xml#Pd">&lt;Pd&gt;</a><text>.B, </text><a hover="Is the name of the governing scalable predicate register, encoded in the &quot;Pg&quot; field." href="eor_p_p_pp.xml#Pg__2">&lt;Pg&gt;</a><text>/Z, </text><a hover="Is the name of the first source scalable predicate register, encoded in the &quot;Pn&quot; field." href="eor_p_p_pp.xml#Pn__2">&lt;Pn&gt;</a><text>.B, </text><a hover="Is the name of the governing scalable predicate register, encoded in the &quot;Pg&quot; field." href="eor_p_p_pp.xml#Pg__2">&lt;Pg&gt;</a><text>.B</text></asmtemplate>
          <aliascond>Pm == Pg</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="not_p_p_p_z_eor_p_p_pp_z" symboldefcount="1">
      <symbol link="Pd">&lt;Pd&gt;</symbol>
      <account encodedin="Pd">
        <intro>
          <para>Is the name of the destination scalable predicate register, encoded in the "Pd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="not_p_p_p_z_eor_p_p_pp_z" symboldefcount="1">
      <symbol link="Pg__2">&lt;Pg&gt;</symbol>
      <account encodedin="Pg">
        <intro>
          <para>Is the name of the governing scalable predicate register, encoded in the "Pg" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="not_p_p_p_z_eor_p_p_pp_z" symboldefcount="1">
      <symbol link="Pn__3">&lt;Pn&gt;</symbol>
      <account encodedin="Pn">
        <intro>
          <para>Is the name of the source scalable predicate register, encoded in the "Pn" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
