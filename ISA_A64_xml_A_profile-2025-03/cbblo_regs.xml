<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="CBBLO_regs" title="CBBLO -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="CBBLO"/>
    <docvar key="datatype" value="8"/>
    <docvar key="instr-class" value="general"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="CBBHI"/>
    <docvar key="sve-compare-type" value="hi"/>
  </docvars>
  <heading>CBBLO</heading>
  <desc>
    <brief>
      <para>Compare unsigned lower than bytes and branch</para>
    </brief>
    <authored>
      <para>This instruction compares the unsigned byte values in two registers, and conditionally
branches to a label at a PC-relative offset if the second value is lower than the first.
It provides a hint that this is not a subroutine call or return.
This instruction does not affect the condition flags.</para>
    </authored>
  </desc>
  <aliasto refiform="cbbcc_regs.xml" iformid="CBBcc_regs">CBB&lt;cc&gt;</aliasto>
  <classes>
    <iclass name="Branch" oneof="1" id="iclass_branch" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="datatype" value="8"/>
        <docvar key="instr-class" value="general"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="CBBHI"/>
        <docvar key="sve-compare-type" value="hi"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_CMPBR" name="ARMv9.6"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.control.compbranch_regs2.CBBHI_8_regs.CBBLO" tworows="1">
        <box hibit="31" width="3" settings="3">
          <c>0</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="28" width="3" settings="3">
          <c>1</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="25" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="23" width="3" name="cc" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="Rm" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="14" name="H" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="13" width="9" name="imm9" usename="1">
          <c colspan="9"/>
        </box>
        <box hibit="4" width="5" name="Rt" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="CBBLO_CBBHI_8_regs" oneofinclass="1" oneof="1" label="Higher">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="8"/>
          <docvar key="mnemonic" value="CBBHI"/>
          <docvar key="alias_mnemonic" value="CBBLO"/>
          <docvar key="instr-class" value="general"/>
          <docvar key="sve-compare-type" value="hi"/>
        </docvars>
        <asmtemplate><text>CBBLO  </text><a hover="Is the 32-bit name of the second general-purpose source register, encoded in the &quot;Rm&quot; field." link="WmOrWZR__2">&lt;Wm&gt;</a><text>, </text><a hover="Is the 32-bit name of the general-purpose register to be tested, encoded in the &quot;Rt&quot; field." link="WtOrWZR">&lt;Wt&gt;</a><text>, </text><a hover="Is the program label to be conditionally branched to. Its offset from the address of this instruction, in the range -1024 to 1020, is encoded as &quot;imm9&quot; times 4." link="imm9_offset">&lt;label&gt;</a></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="cbbcc_regs.xml#CBBHI_8_regs">CBBHI</a><text>  </text><a hover="Is the 32-bit name of the general-purpose register to be tested, encoded in the &quot;Rt&quot; field." href="cbbcc_regs.xml#WtOrWZR">&lt;Wt&gt;</a><text>, </text><a hover="Is the 32-bit name of the second general-purpose source register, encoded in the &quot;Rm&quot; field." href="cbbcc_regs.xml#WmOrWZR__2">&lt;Wm&gt;</a><text>, </text><a hover="Is the program label to be conditionally branched to. Its offset from the address of this instruction, in the range -1024 to 1020, is encoded as &quot;imm9&quot; times 4." href="cbbcc_regs.xml#imm9_offset">&lt;label&gt;</a></asmtemplate>
          <aliascond>Never</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="CBBLO_CBBHI_8_regs" symboldefcount="1">
      <symbol link="WmOrWZR__2">&lt;Wm&gt;</symbol>
      <account encodedin="Rm">
        <intro>
          <para>Is the 32-bit name of the second general-purpose source register, encoded in the "Rm" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CBBLO_CBBHI_8_regs" symboldefcount="1">
      <symbol link="WtOrWZR">&lt;Wt&gt;</symbol>
      <account encodedin="Rt">
        <intro>
          <para>Is the 32-bit name of the general-purpose register to be tested, encoded in the "Rt" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CBBLO_CBBHI_8_regs" symboldefcount="1">
      <symbol link="imm9_offset">&lt;label&gt;</symbol>
      <account encodedin="imm9">
        <intro>
          <para>Is the program label to be conditionally branched to. Its offset from the address of this instruction, in the range -1024 to 1020, is encoded as "imm9" times 4.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
