<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="mov_dup_z_r" title="MOV (scalar, unpredicated) -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="MOV"/>
    <docvar key="instr-class" value="sve"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="DUP"/>
  </docvars>
  <heading>MOV (scalar, unpredicated)</heading>
  <desc>
    <brief>
      <para>Move general-purpose register to vector elements (unpredicated)</para>
    </brief>
    <authored>
      <para>Unconditionally broadcast the general-purpose scalar source register into each element of the
destination vector. This instruction is unpredicated.</para>
    </authored>
    <predicated>False</predicated>
    <uses_dit condition="FEAT_SVE2 is implemented or FEAT_SME is implemented">True</uses_dit>
  </desc>
  <operationalnotes>
    <operationalnote>
      <operationalnote_content>
        <para>If PSTATE.DIT is 1:</para>
        <list type="unordered">
          <listitem>
            <content>The execution time of this instruction is independent of:<list type="unordered">
                <listitem>
                  <content>The values of the data supplied in any of its registers.</content>
                </listitem>
                <listitem>
                  <content>The values of the NZCV flags.</content>
                </listitem>
              </list>
            </content>
          </listitem>
          <listitem>
            <content>The response of this instruction to asynchronous exceptions does not vary based on:<list type="unordered">
                <listitem>
                  <content>The values of the data supplied in any of its registers.</content>
                </listitem>
                <listitem>
                  <content>The values of the NZCV flags.</content>
                </listitem>
              </list>
            </content>
          </listitem>
        </list>
      </operationalnote_content>
    </operationalnote>
  </operationalnotes>
  <aliasto refiform="dup_z_r.xml" iformid="dup_z_r">DUP (scalar)</aliasto>
  <classes>
    <iclass name="SVE" oneof="1" id="iclass_sve" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="sve"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="DUP"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SVE || FEAT_SME" name="FEAT_SVE || FEAT_SME"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sve.sve_perm_unpred_d.sve_int_perm_dup_r.dup_z_r_.mov_z_r_">
        <box hibit="31" width="3" settings="3">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" width="2" name="size" usename="1">
          <c colspan="2"/>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="20" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="18" width="3" settings="3">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="15" width="6" settings="6">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Zd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="mov_z_r__dup_z_r_" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="DUP"/>
          <docvar key="alias_mnemonic" value="MOV"/>
          <docvar key="instr-class" value="sve"/>
        </docvars>
        <asmtemplate><text>MOV  </text><a hover="Is the name of the destination scalable vector register, encoded in the &quot;Zd&quot; field." link="Zd">&lt;Zd&gt;</a><text>.</text><a hover="Is the size specifier, " link="T__29">&lt;T&gt;</a><text>, </text><a hover="Is a width specifier, " link="R__3">&lt;R&gt;</a><a hover="Is the number [0-30] of the general-purpose source register or the name SP (31), encoded in the &quot;Rn&quot; field." link="nSP">&lt;n|SP&gt;</a></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="dup_z_r.xml#dup_z_r_">DUP</a><text>  </text><a hover="Is the name of the destination scalable vector register, encoded in the &quot;Zd&quot; field." href="dup_z_r.xml#Zd">&lt;Zd&gt;</a><text>.</text><a hover="Is the size specifier, " href="dup_z_r.xml#T__29">&lt;T&gt;</a><text>, </text><a hover="Is a width specifier, " href="dup_z_r.xml#R__3">&lt;R&gt;</a><a hover="Is the number [0-30] of the general-purpose source register or the name SP (31), encoded in the &quot;Rn&quot; field." href="dup_z_r.xml#nSP">&lt;n|SP&gt;</a></asmtemplate>
          <aliascond>Unconditionally</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="mov_z_r__dup_z_r_" symboldefcount="1">
      <symbol link="Zd">&lt;Zd&gt;</symbol>
      <account encodedin="Zd">
        <intro>
          <para>Is the name of the destination scalable vector register, encoded in the "Zd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="mov_z_r__dup_z_r_" symboldefcount="1">
      <symbol link="T__29">&lt;T&gt;</symbol>
      <definition encodedin="size">
        <intro>Is the size specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">size</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">00</entry>
                <entry class="symbol">B</entry>
              </row>
              <row>
                <entry class="bitfield">01</entry>
                <entry class="symbol">H</entry>
              </row>
              <row>
                <entry class="bitfield">10</entry>
                <entry class="symbol">S</entry>
              </row>
              <row>
                <entry class="bitfield">11</entry>
                <entry class="symbol">D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="mov_z_r__dup_z_r_" symboldefcount="1">
      <symbol link="R__3">&lt;R&gt;</symbol>
      <definition encodedin="size">
        <intro>Is a width specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">size</entry>
                <entry class="symbol">&lt;R&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">00</entry>
                <entry class="symbol">W</entry>
              </row>
              <row>
                <entry class="bitfield">01</entry>
                <entry class="symbol">W</entry>
              </row>
              <row>
                <entry class="bitfield">10</entry>
                <entry class="symbol">W</entry>
              </row>
              <row>
                <entry class="bitfield">11</entry>
                <entry class="symbol">X</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="mov_z_r__dup_z_r_" symboldefcount="1">
      <symbol link="nSP">&lt;n|SP&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the number [0-30] of the general-purpose source register or the name SP (31), encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
