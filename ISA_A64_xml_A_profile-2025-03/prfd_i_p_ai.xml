<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="prfd_i_p_ai" title="PRFD (vector plus immediate) -- A64" type="instruction">
  <docvars>
    <docvar key="instr-class" value="sve"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="PRFD"/>
    <docvar key="sve-esize" value="esize-doubleword"/>
  </docvars>
  <heading>PRFD (vector plus immediate)</heading>
  <desc>
    <brief>
      <para>Gather prefetch doublewords (vector plus immediate)</para>
    </brief>
    <authored>
      <para>Gather prefetch of  doublewords from the active memory addresses generated by a
 vector base plus immediate index.
The index is a multiple of 8 in the range 0 to 248.
Inactive addresses are not prefetched from memory.</para>
      <para>The <syntax>&lt;prfop&gt;</syntax> symbol specifies the prefetch hint as a combination of three
options: access type PLD for load or PST for store;
target cache level L1, L2 or L3;
temporality (KEEP for temporal or STRM for non-temporal).</para>
      <para>This instruction is illegal when executed in Streaming SVE mode, unless FEAT_SME_FA64 is implemented and enabled.</para>
    </authored>
    <predicated>True</predicated>
    <sm_policy>SM_0_only</sm_policy>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <classesintro count="2">
      <txt>It has encodings from 2 classes:</txt>
      <a href="#iclass_32_bit_element">32-bit element</a>
      <txt> and </txt>
      <a href="#iclass_64_bit_element">64-bit element</a>
    </classesintro>
    <iclass name="32-bit element" oneof="2" id="iclass_32_bit_element" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="sve"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="PRFD"/>
        <docvar key="sve-elem-type" value="32-elem"/>
        <docvar key="sve-esize" value="esize-doubleword"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SVE" name="PROFILE_A"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sve.sve_mem32.sve_mem_32b_prfm_vi.prfd_i_p_ai_s" tworows="1">
        <box hibit="31" width="3" settings="3">
          <c>1</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="24" width="2" name="msz" usename="1" settings="2" psbits="xx">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="22" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="imm5" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="3" settings="3">
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="12" width="3" name="Pg" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="9" width="5" name="Zn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="3" width="4" name="prfop" usename="1">
          <c colspan="4"/>
        </box>
      </regdiagram>
      <encoding name="prfd_i_p_ai_s" oneofinclass="1" oneof="2" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="PRFD"/>
          <docvar key="instr-class" value="sve"/>
          <docvar key="sve-elem-type" value="32-elem"/>
          <docvar key="sve-esize" value="esize-doubleword"/>
        </docvars>
        <asmtemplate><text>PRFD  </text><a hover="Is the prefetch operation specifier, " link="prfop">&lt;prfop&gt;</a><text>, </text><a hover="Is the name of the governing scalable predicate register P0-P7, encoded in the &quot;Pg&quot; field." link="Pg">&lt;Pg&gt;</a><text>, [</text><a hover="Is the name of the base scalable vector register, encoded in the &quot;Zn&quot; field." link="Zn__3">&lt;Zn&gt;</a><text>.S{, #</text><a hover="Is the optional unsigned immediate byte offset, a multiple of 8 in the range 0 to 248, defaulting to 0, encoded in the &quot;imm5&quot; field." link="imm__62">&lt;imm&gt;</a><text>}]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sve.sve_mem32.sve_mem_32b_prfm_vi.prfd_i_p_ai_s" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SVE) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 32;
constant integer g = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pg);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Zn);
constant integer level = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(prfop&lt;2:1&gt;);
constant boolean stream = (prfop&lt;0&gt; == '1');
constant <a link="PrefetchHint" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">PrefetchHint</a> pref_hint = if prfop&lt;3&gt; == '0' then <a link="Prefetch_READ" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">Prefetch_READ</a> else <a link="Prefetch_WRITE" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">Prefetch_WRITE</a>;
constant integer scale = 3;
constant integer offset = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(imm5);</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="64-bit element" oneof="2" id="iclass_64_bit_element" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="sve"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="PRFD"/>
        <docvar key="sve-elem-type" value="64-elem"/>
        <docvar key="sve-esize" value="esize-doubleword"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SVE" name="PROFILE_A"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sve.sve_mem64.sve_mem_64b_prfm_vi.prfd_i_p_ai_d" tworows="1">
        <box hibit="31" width="3" settings="3">
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="24" width="2" name="msz" usename="1" settings="2" psbits="xx">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="22" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="imm5" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="3" settings="3">
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="12" width="3" name="Pg" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="9" width="5" name="Zn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="3" width="4" name="prfop" usename="1">
          <c colspan="4"/>
        </box>
      </regdiagram>
      <encoding name="prfd_i_p_ai_d" oneofinclass="1" oneof="2" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="PRFD"/>
          <docvar key="instr-class" value="sve"/>
          <docvar key="sve-elem-type" value="64-elem"/>
          <docvar key="sve-esize" value="esize-doubleword"/>
        </docvars>
        <asmtemplate><text>PRFD  </text><a hover="Is the prefetch operation specifier, " link="prfop">&lt;prfop&gt;</a><text>, </text><a hover="Is the name of the governing scalable predicate register P0-P7, encoded in the &quot;Pg&quot; field." link="Pg">&lt;Pg&gt;</a><text>, [</text><a hover="Is the name of the base scalable vector register, encoded in the &quot;Zn&quot; field." link="Zn__3">&lt;Zn&gt;</a><text>.D{, #</text><a hover="Is the optional unsigned immediate byte offset, a multiple of 8 in the range 0 to 248, defaulting to 0, encoded in the &quot;imm5&quot; field." link="imm__62">&lt;imm&gt;</a><text>}]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sve.sve_mem64.sve_mem_64b_prfm_vi.prfd_i_p_ai_d" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SVE) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 64;
constant integer g = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pg);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Zn);
constant integer level = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(prfop&lt;2:1&gt;);
constant boolean stream = (prfop&lt;0&gt; == '1');
constant <a link="PrefetchHint" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">PrefetchHint</a> pref_hint = if prfop&lt;3&gt; == '0' then <a link="Prefetch_READ" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">Prefetch_READ</a> else <a link="Prefetch_WRITE" file="shared_pseudocode.xml" hover="enumeration PrefetchHint {Prefetch_READ, Prefetch_WRITE, Prefetch_EXEC}">Prefetch_WRITE</a>;
constant integer scale = 3;
constant integer offset = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(imm5);</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="prfd_i_p_ai_s, prfd_i_p_ai_d" symboldefcount="1">
      <symbol link="prfop">&lt;prfop&gt;</symbol>
      <definition encodedin="prfop">
        <intro>Is the prefetch operation specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">prfop</entry>
                <entry class="symbol">&lt;prfop&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0000</entry>
                <entry class="symbol">PLDL1KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">0001</entry>
                <entry class="symbol">PLDL1STRM</entry>
              </row>
              <row>
                <entry class="bitfield">0010</entry>
                <entry class="symbol">PLDL2KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">0011</entry>
                <entry class="symbol">PLDL2STRM</entry>
              </row>
              <row>
                <entry class="bitfield">0100</entry>
                <entry class="symbol">PLDL3KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">0101</entry>
                <entry class="symbol">PLDL3STRM</entry>
              </row>
              <row>
                <entry class="bitfield">x11x</entry>
                <entry class="symbol">#uimm4</entry>
              </row>
              <row>
                <entry class="bitfield">1000</entry>
                <entry class="symbol">PSTL1KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">1001</entry>
                <entry class="symbol">PSTL1STRM</entry>
              </row>
              <row>
                <entry class="bitfield">1010</entry>
                <entry class="symbol">PSTL2KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">1011</entry>
                <entry class="symbol">PSTL2STRM</entry>
              </row>
              <row>
                <entry class="bitfield">1100</entry>
                <entry class="symbol">PSTL3KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">1101</entry>
                <entry class="symbol">PSTL3STRM</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="prfd_i_p_ai_s, prfd_i_p_ai_d" symboldefcount="1">
      <symbol link="Pg">&lt;Pg&gt;</symbol>
      <account encodedin="Pg">
        <intro>
          <para>Is the name of the governing scalable predicate register P0-P7, encoded in the "Pg" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="prfd_i_p_ai_s, prfd_i_p_ai_d" symboldefcount="1">
      <symbol link="Zn__3">&lt;Zn&gt;</symbol>
      <account encodedin="Zn">
        <intro>
          <para>Is the name of the base scalable vector register, encoded in the "Zn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="prfd_i_p_ai_s, prfd_i_p_ai_d" symboldefcount="1">
      <symbol link="imm__62">&lt;imm&gt;</symbol>
      <account encodedin="imm5">
        <intro>
          <para>Is the optional unsigned immediate byte offset, a multiple of 8 in the range 0 to 248, defaulting to 0, encoded in the "imm5" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.sve.sve_mem32.sve_mem_32b_prfm_vi.prfd_i_p_ai_s" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="impl-aarch64.CheckNonStreamingSVEEnabled.0" file="shared_pseudocode.xml" hover="function: CheckNonStreamingSVEEnabled()">CheckNonStreamingSVEEnabled</a>();
constant integer VL = <a link="impl-aarch64.CurrentVL.read.none" file="shared_pseudocode.xml" hover="accessor: VecLen CurrentVL">CurrentVL</a>;
constant integer PL = VL DIV 8;
constant integer elements = VL DIV esize;
constant bits(PL) mask = <a link="impl-aarch64.P.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) P[integer n, integer width]">P</a>[g, PL];
bits(VL) base;

if <a link="impl-aarch64.AnyActiveElement.2" file="shared_pseudocode.xml" hover="function: boolean AnyActiveElement(bits(N) mask, integer esize)">AnyActiveElement</a>(mask, esize) then
    base = <a link="impl-aarch64.Z.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) Z[integer n, integer width]">Z</a>[n, VL];

for e = 0 to elements-1
    if <a link="impl-aarch64.ActivePredicateElement.3" file="shared_pseudocode.xml" hover="function: boolean ActivePredicateElement(bits(N) pred, integer e, integer esize)">ActivePredicateElement</a>(mask, e, esize) then
        constant bits(64) addr = <a link="impl-shared.ZeroExtend.2" file="shared_pseudocode.xml" hover="function: bits(N) ZeroExtend(bits(M) x, integer N)">ZeroExtend</a>(<a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[base, e, esize], 64) + (offset &lt;&lt; scale);
        <a link="impl-shared.Hint_Prefetch.4" file="shared_pseudocode.xml" hover="function: Hint_Prefetch(bits(64) address, PrefetchHint hint, integer target, boolean stream)">Hint_Prefetch</a>(addr, pref_hint, level, stream);</pstext></ps>
  </ps_section>
</instructionsection>
