<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="fmop4a_za_zz" title="FMOP4A (non-widening) -- A64" type="instruction">
  <docvars>
    <docvar key="instr-class" value="mortlach2"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="FMOP4A"/>
  </docvars>
  <heading>FMOP4A (non-widening)</heading>
  <desc>
    <brief>
      <para>Floating-point quarter-tile outer products, accumulating</para>
    </brief>
    <authored>
      <para>This instruction generates four independent quarter-tile
floating-point outer products
from the sub-matrices in the half-vectors of the one or two first and second
source vectors and accumulates the results to the corresponding elements of
a 16-bit, 32-bit, or 64-bit element ZA tile.</para>
      <para>In case of the half-precision variant, each of the quarter-tile
outer products is generated by multiplying
the SVL<sub>H</sub>÷2 × 1 sub-matrix of half-precision values held in the
half-vectors of the first source vectors by the 1 × SVL<sub>H</sub>÷2 sub-matrix of
half-precision values held in the half-vectors of the second source vectors.
In case of the single-precision variant, each of the quarter-tile
outer products is generated by multiplying
the SVL<sub>S</sub>÷2 × 1 sub-matrix of single-precision values held in the
half-vectors of the first source vectors by the 1 × SVL<sub>S</sub>÷2 sub-matrix of
single-precision values held in the half-vectors of the second source vectors.
In case of the double-precision variant, each of the quarter-tile
outer products is generated by multiplying
the SVL<sub>D</sub>÷2 × 1 sub-matrix of double-precision values held in the
half-vectors of the first source vectors by the 1 × SVL<sub>D</sub>÷2 sub-matrix of
double-precision values held in the half-vectors of the second source vectors.</para>
      <para>The resulting quarter-tile SVL<sub>H</sub>÷2 × SVL<sub>H</sub>÷2 half-precision outer products in case of
the half-precision variant, SVL<sub>S</sub>÷2 × SVL<sub>S</sub>÷2
single-precision outer products in case of the single-precision variant,
or SVL<sub>D</sub>÷2 × SVL<sub>D</sub>÷2 double-precision outer products
in case of the double-precision variant
are destructively added to the destination ZA tile.
This is equivalent to performing a single multiply-accumulate to
each of the destination tile elements.</para>
      <para>This instruction follows SME ZA-targeting floating-point behaviors.</para>
      <para>This instruction is unpredicated.</para>
    </authored>
    <predicated>False</predicated>
    <sm_policy>SM_1_only</sm_policy>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <classesintro count="12">
      <txt>It has encodings from 12 classes:</txt>
      <a href="#iclass_half_precision_single_and_multiple_vectors">Half-precision, single and multiple vectors</a>
      <txt>, </txt>
      <a href="#iclass_half_precision_single_vectors">Half-precision, single vectors</a>
      <txt>, </txt>
      <a href="#iclass_half_precision_multiple_and_single_vectors">Half-precision, multiple and single vectors</a>
      <txt>, </txt>
      <a href="#iclass_half_precision_multiple_vectors">Half-precision, multiple vectors</a>
      <txt>, </txt>
      <a href="#iclass_single_precision_single_and_multiple_vectors">Single-precision, single and multiple vectors</a>
      <txt>, </txt>
      <a href="#iclass_single_precision_single_vectors">Single-precision, single vectors</a>
      <txt>, </txt>
      <a href="#iclass_single_precision_multiple_and_single_vectors">Single-precision, multiple and single vectors</a>
      <txt>, </txt>
      <a href="#iclass_single_precision_multiple_vectors">Single-precision, multiple vectors</a>
      <txt>, </txt>
      <a href="#iclass_double_precision_single_and_multiple_vectors">Double-precision, single and multiple vectors</a>
      <txt>, </txt>
      <a href="#iclass_double_precision_single_vectors">Double-precision, single vectors</a>
      <txt>, </txt>
      <a href="#iclass_double_precision_multiple_and_single_vectors">Double-precision, multiple and single vectors</a>
      <txt> and </txt>
      <a href="#iclass_double_precision_multiple_vectors">Double-precision, multiple vectors</a>
    </classesintro>
    <iclass name="Half-precision, single and multiple vectors" oneof="12" id="iclass_half_precision_single_and_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-hp-single-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h1x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="0" width="1" name="ZAda" usename="1">
          <c colspan="1"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_h1x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-hp-single-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Half-precision, multiple and single vectors&quot;, &quot;Half-precision, multiple vectors&quot;, &quot;Half-precision, single and multiple vectors&quot;, and &quot;Half-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA1, encoded in the &quot;ZAda&quot; field." link="ZAda__3">&lt;ZAda&gt;</a><text>.H, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.H, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.H-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.H }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h1x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F16F16) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 16;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Half-precision, single vectors" oneof="12" id="iclass_half_precision_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-hp-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h1x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="0" width="1" name="ZAda" usename="1">
          <c colspan="1"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_h1x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-hp-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Half-precision, multiple and single vectors&quot;, &quot;Half-precision, multiple vectors&quot;, &quot;Half-precision, single and multiple vectors&quot;, and &quot;Half-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA1, encoded in the &quot;ZAda&quot; field." link="ZAda__3">&lt;ZAda&gt;</a><text>.H, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.H, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.H</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h1x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F16F16) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 16;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Half-precision, multiple and single vectors" oneof="12" id="iclass_half_precision_multiple_and_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-hp-multiple-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h2x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="0" width="1" name="ZAda" usename="1">
          <c colspan="1"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_h2x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-hp-multiple-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Half-precision, multiple and single vectors&quot;, &quot;Half-precision, multiple vectors&quot;, &quot;Half-precision, single and multiple vectors&quot;, and &quot;Half-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA1, encoded in the &quot;ZAda&quot; field." link="ZAda__3">&lt;ZAda&gt;</a><text>.H, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.H-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.H }, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.H</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h2x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F16F16) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 16;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Half-precision, multiple vectors" oneof="12" id="iclass_half_precision_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-hp-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F16F16"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h2x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="0" width="1" name="ZAda" usename="1">
          <c colspan="1"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_h2x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-hp-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Half-precision, multiple and single vectors&quot;, &quot;Half-precision, multiple vectors&quot;, &quot;Half-precision, single and multiple vectors&quot;, and &quot;Half-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA1, encoded in the &quot;ZAda&quot; field." link="ZAda__3">&lt;ZAda&gt;</a><text>.H, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.H-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.H }, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.H-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.H }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h2x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F16F16) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 16;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Single-precision, single and multiple vectors" oneof="12" id="iclass_single_precision_single_and_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-sp-single-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4" name="ARMv9.6"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s1x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="ZAda" usename="1">
          <c colspan="2"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_s1x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-sp-single-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Single-precision, multiple and single vectors&quot;, &quot;Single-precision, multiple vectors&quot;, &quot;Single-precision, single and multiple vectors&quot;, and &quot;Single-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA3, encoded in the &quot;ZAda&quot; field." link="ZAda">&lt;ZAda&gt;</a><text>.S, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.S, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.S-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.S }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s1x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 32;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Single-precision, single vectors" oneof="12" id="iclass_single_precision_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-sp-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4" name="ARMv9.6"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s1x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="ZAda" usename="1">
          <c colspan="2"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_s1x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-sp-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Single-precision, multiple and single vectors&quot;, &quot;Single-precision, multiple vectors&quot;, &quot;Single-precision, single and multiple vectors&quot;, and &quot;Single-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA3, encoded in the &quot;ZAda&quot; field." link="ZAda">&lt;ZAda&gt;</a><text>.S, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.S, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.S</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s1x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 32;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Single-precision, multiple and single vectors" oneof="12" id="iclass_single_precision_multiple_and_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-sp-multiple-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4" name="ARMv9.6"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s2x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="ZAda" usename="1">
          <c colspan="2"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_s2x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-sp-multiple-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Single-precision, multiple and single vectors&quot;, &quot;Single-precision, multiple vectors&quot;, &quot;Single-precision, single and multiple vectors&quot;, and &quot;Single-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA3, encoded in the &quot;ZAda&quot; field." link="ZAda">&lt;ZAda&gt;</a><text>.S, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.S-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.S }, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.S</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s2x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 32;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Single-precision, multiple vectors" oneof="12" id="iclass_single_precision_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-sp-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4" name="ARMv9.6"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s2x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="2" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="ZAda" usename="1">
          <c colspan="2"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_s2x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-sp-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Single-precision, multiple and single vectors&quot;, &quot;Single-precision, multiple vectors&quot;, &quot;Single-precision, single and multiple vectors&quot;, and &quot;Single-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA3, encoded in the &quot;ZAda&quot; field." link="ZAda">&lt;ZAda&gt;</a><text>.S, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.S-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.S }, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.S-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.S }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_prod4.mortlach_f32f32_prod4.fmop4a_za_zz_s2x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) then <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 32;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Double-precision, single and multiple vectors" oneof="12" id="iclass_double_precision_single_and_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-dp-single-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d1x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="29" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="7" settings="7">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="3" name="ZAda" usename="1">
          <c colspan="3"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_d1x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-dp-single-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Double-precision, multiple and single vectors&quot;, &quot;Double-precision, multiple vectors&quot;, &quot;Double-precision, single and multiple vectors&quot;, and &quot;Double-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA7, encoded in the &quot;ZAda&quot; field." link="ZAda__2">&lt;ZAda&gt;</a><text>.D, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.D, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.D-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.D }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d1x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F64F64) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 64;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Double-precision, single vectors" oneof="12" id="iclass_double_precision_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-dp-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d1x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="29" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="7" settings="7">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="3" name="ZAda" usename="1">
          <c colspan="3"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_d1x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-dp-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Double-precision, multiple and single vectors&quot;, &quot;Double-precision, multiple vectors&quot;, &quot;Double-precision, single and multiple vectors&quot;, and &quot;Double-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA7, encoded in the &quot;ZAda&quot; field." link="ZAda__2">&lt;ZAda&gt;</a><text>.D, </text><a hover="Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn_mortlach">&lt;Zn&gt;</a><text>.D, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.D</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d1x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F64F64) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 64;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 1;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Double-precision, multiple and single vectors" oneof="12" id="iclass_double_precision_multiple_and_single_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-dp-multiple-single"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d2x1" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="29" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="7" settings="7">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="3" name="ZAda" usename="1">
          <c colspan="3"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_d2x1" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-dp-multiple-single"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Double-precision, multiple and single vectors&quot;, &quot;Double-precision, multiple vectors&quot;, &quot;Double-precision, single and multiple vectors&quot;, and &quot;Double-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA7, encoded in the &quot;ZAda&quot; field." link="ZAda__2">&lt;ZAda&gt;</a><text>.D, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.D-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.D }, </text><a hover="Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm_mortlach">&lt;Zm&gt;</a><text>.D</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d2x1" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F64F64) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 64;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 1;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Double-precision, multiple vectors" oneof="12" id="iclass_double_precision_multiple_vectors" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="mortlach2"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOP4A"/>
        <docvar key="sme-mop4-variants" value="sme-mop4-dp-multiple"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64" name="FEAT_SME_MOP4 &amp;&amp; FEAT_SME_F64F64"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d2x2" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="30" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="29" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="28" width="4" settings="4">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="24" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="23" width="2" settings="2">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" name="M" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="19" width="3" name="Zm" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="16" width="7" settings="7">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" name="N" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="8" width="3" name="Zn" usename="1">
          <c colspan="3"/>
        </box>
        <box hibit="5" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="4" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="3" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="2" width="3" name="ZAda" usename="1">
          <c colspan="3"/>
        </box>
      </regdiagram>
      <encoding name="fmop4a_za_zz_d2x2" oneofinclass="1" oneof="12" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOP4A"/>
          <docvar key="instr-class" value="mortlach2"/>
          <docvar key="sme-mop4-variants" value="sme-mop4-dp-multiple"/>
        </docvars>
        <asmtemplate><text>FMOP4A  </text><a hover="For the &quot;Double-precision, multiple and single vectors&quot;, &quot;Double-precision, multiple vectors&quot;, &quot;Double-precision, single and multiple vectors&quot;, and &quot;Double-precision, single vectors&quot; variants: is the name of the ZA tile ZA0-ZA7, encoded in the &quot;ZAda&quot; field." link="ZAda__2">&lt;ZAda&gt;</a><text>.D, { </text><a hover="Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2." link="Zn1_mortlach">&lt;Zn1&gt;</a><text>.D-</text><a hover="Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as &quot;Zn&quot; times 2 plus 1." link="Zn2_mortlach">&lt;Zn2&gt;</a><text>.D }, { </text><a hover="Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 16." link="Zm1_mortlach">&lt;Zm1&gt;</a><text>.D-</text><a hover="Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as &quot;Zm&quot; times 2 plus 17." link="Zm2_mortlach">&lt;Zm2&gt;</a><text>.D }</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.sme.mortlach2_64bit_prod4.mortlach_f64f64_prod4.fmop4a_za_zz_d2x2" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_SME_MOP4) || !IsFeatureImplemented(FEAT_SME_F64F64) then
    <a link="impl-shared.EndOfDecode.1" file="shared_pseudocode.xml" hover="function: EndOfDecode(DecodeType reason)">EndOfDecode</a>(<a link="Decode_UNDEF" file="shared_pseudocode.xml" hover="enumeration DecodeType { Decode_UNDEF, Decode_NOP, Decode_OK }">Decode_UNDEF</a>);
constant integer esize = 64;
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('0':Zn:'0');
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>('1':Zm:'0');
constant integer nreg = 2;
constant integer mreg = 2;
constant integer da = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ZAda);
constant boolean sub_op = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="fmop4a_za_zz_h1x2, fmop4a_za_zz_h1x1, fmop4a_za_zz_h2x1, fmop4a_za_zz_h2x2" symboldefcount="1">
      <symbol link="ZAda__3">&lt;ZAda&gt;</symbol>
      <account encodedin="ZAda">
        <intro>
          <para>For the "Half-precision, multiple and single vectors", "Half-precision, multiple vectors", "Half-precision, single and multiple vectors", and "Half-precision, single vectors" variants: is the name of the ZA tile ZA0-ZA1, encoded in the "ZAda" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_s1x2, fmop4a_za_zz_s1x1, fmop4a_za_zz_s2x1, fmop4a_za_zz_s2x2" symboldefcount="2">
      <symbol link="ZAda">&lt;ZAda&gt;</symbol>
      <account encodedin="ZAda">
        <intro>
          <para>For the "Single-precision, multiple and single vectors", "Single-precision, multiple vectors", "Single-precision, single and multiple vectors", and "Single-precision, single vectors" variants: is the name of the ZA tile ZA0-ZA3, encoded in the "ZAda" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_d1x2, fmop4a_za_zz_d1x1, fmop4a_za_zz_d2x1, fmop4a_za_zz_d2x2" symboldefcount="3">
      <symbol link="ZAda__2">&lt;ZAda&gt;</symbol>
      <account encodedin="ZAda">
        <intro>
          <para>For the "Double-precision, multiple and single vectors", "Double-precision, multiple vectors", "Double-precision, single and multiple vectors", and "Double-precision, single vectors" variants: is the name of the ZA tile ZA0-ZA7, encoded in the "ZAda" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h1x2, fmop4a_za_zz_h1x1, fmop4a_za_zz_s1x2, fmop4a_za_zz_s1x1, fmop4a_za_zz_d1x2, fmop4a_za_zz_d1x1" symboldefcount="1">
      <symbol link="Zn_mortlach">&lt;Zn&gt;</symbol>
      <account encodedin="Zn">
        <intro>
          <para>Is the name of the first source scalable vector register, registers in the range Z0-Z15, encoded as "Zn" times 2.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h1x2, fmop4a_za_zz_h2x2, fmop4a_za_zz_s1x2, fmop4a_za_zz_s2x2, fmop4a_za_zz_d1x2, fmop4a_za_zz_d2x2" symboldefcount="1">
      <symbol link="Zm1_mortlach">&lt;Zm1&gt;</symbol>
      <account encodedin="Zm">
        <intro>
          <para>Is the name of the first scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as "Zm" times 2 plus 16.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h1x2, fmop4a_za_zz_h2x2, fmop4a_za_zz_s1x2, fmop4a_za_zz_s2x2, fmop4a_za_zz_d1x2, fmop4a_za_zz_d2x2" symboldefcount="1">
      <symbol link="Zm2_mortlach">&lt;Zm2&gt;</symbol>
      <account encodedin="Zm">
        <intro>
          <para>Is the name of the second scalable vector register of the second source multi-vector group, in the range Z16-Z31, encoded as "Zm" times 2 plus 17.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h1x1, fmop4a_za_zz_h2x1, fmop4a_za_zz_s1x1, fmop4a_za_zz_s2x1, fmop4a_za_zz_d1x1, fmop4a_za_zz_d2x1" symboldefcount="1">
      <symbol link="Zm_mortlach">&lt;Zm&gt;</symbol>
      <account encodedin="Zm">
        <intro>
          <para>Is the name of the second source scalable vector register, registers in the range Z16-Z31, encoded as "Zm" times 2 plus 16.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h2x1, fmop4a_za_zz_h2x2, fmop4a_za_zz_s2x1, fmop4a_za_zz_s2x2, fmop4a_za_zz_d2x1, fmop4a_za_zz_d2x2" symboldefcount="1">
      <symbol link="Zn1_mortlach">&lt;Zn1&gt;</symbol>
      <account encodedin="Zn">
        <intro>
          <para>Is the name of the first scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as "Zn" times 2.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="fmop4a_za_zz_h2x1, fmop4a_za_zz_h2x2, fmop4a_za_zz_s2x1, fmop4a_za_zz_s2x2, fmop4a_za_zz_d2x1, fmop4a_za_zz_d2x2" symboldefcount="1">
      <symbol link="Zn2_mortlach">&lt;Zn2&gt;</symbol>
      <account encodedin="Zn">
        <intro>
          <para>Is the name of the second scalable vector register of the first source multi-vector group, in the range Z0-Z15, encoded as "Zn" times 2 plus 1.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.sme.mortlach2_prod4.mortlach_f16f16_prod4.fmop4a_za_zz_h1x2" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="impl-aarch64.CheckStreamingSVEAndZAEnabled.0" file="shared_pseudocode.xml" hover="function: CheckStreamingSVEAndZAEnabled()">CheckStreamingSVEAndZAEnabled</a>();
constant integer VL = <a link="impl-aarch64.CurrentVL.read.none" file="shared_pseudocode.xml" hover="accessor: VecLen CurrentVL">CurrentVL</a>;
constant integer hvsize = VL DIV 2;
constant integer dim = hvsize DIV esize;
constant integer tilesize = 4*dim*dim*esize;
constant bits(tilesize) op3 = <a link="impl-aarch64.ZAtile.read.3" file="shared_pseudocode.xml" hover="accessor: bits(width) ZAtile[integer tile, ESize esize, integer width]">ZAtile</a>[da, esize, tilesize];
bits(tilesize) result;

for outprod = 0 to 3
    constant integer row_hv = outprod DIV 2;
    constant integer col_hv = outprod MOD 2;
    constant integer row_base = row_hv * dim;
    constant integer col_base = col_hv * dim;

    constant bits(VL) op1 = <a link="impl-aarch64.Z.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) Z[integer n, integer width]">Z</a>[n + (nreg-1)*col_hv, VL];
    constant bits(VL) op2 = <a link="impl-aarch64.Z.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) Z[integer n, integer width]">Z</a>[m + (mreg-1)*row_hv, VL];

    for row = 0 to dim-1
        for col = 0 to dim-1
            constant integer row_idx  = row_base + row;
            constant integer col_idx  = col_base + col;
            constant integer tile_idx = row_idx * dim * 2 + col_idx;

            bits(esize) elem1 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[op1, row_idx, esize];
            constant bits(esize) elem2 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[op2, col_idx, esize];
            constant bits(esize) elem3 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[op3, tile_idx, esize];

            if sub_op then elem1 = <a link="impl-shared.FPNeg.2" file="shared_pseudocode.xml" hover="function: bits(N) FPNeg(bits(N) op, FPCR_Type fpcr)">FPNeg</a>(elem1, FPCR);
            <a link="impl-shared.Elem.write.3" file="shared_pseudocode.xml" hover="accessor: Elem[bits(N) &amp;vector, integer e, integer size] = bits(size) value">Elem</a>[result, tile_idx, esize] = <a link="impl-shared.FPMulAdd_ZA.4" file="shared_pseudocode.xml" hover="function: bits(N) FPMulAdd_ZA(bits(N) addend, bits(N) op1, bits(N) op2, FPCR_Type fpcr_in)">FPMulAdd_ZA</a>(elem3, elem1, elem2, FPCR);
<a link="impl-aarch64.ZAtile.write.3" file="shared_pseudocode.xml" hover="accessor: ZAtile[integer tile, ESize esize, integer width] = bits(width) value">ZAtile</a>[da, esize, tilesize] = result;</pstext></ps>
  </ps_section>
</instructionsection>
